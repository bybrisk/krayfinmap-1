{"version":3,"sources":["components/application/deliveryTable/AddMultiple.js"],"names":["CircularProgressWithLabel","props","position","display","variant","top","left","bottom","right","alignItems","justifyContent","component","style","color","Math","round","value","AddMultiple","React","useState","progress","setProgress","enqueueSnackbar","useSnackbar","loader","setLoader","bybId","useSelector","state","closeModal","FinalStep","data","a","i","length","article","JSON","stringify","CustomerAddress","itemWeight","phone","toString","CustomerName","paymentStatus","amount","pincode","BybID","AddDelivery","autoHideDuration","makeRequest","className","padding","type","onChange","e","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","target","result","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","onerror","error","then","console","log","readExcel","files","id","accept","htmlFor","background","borderRadius","border","margin","width","height","textAlign","cursor"],"mappings":"wTAkBA,SAASA,EAA0BC,GACjC,OACE,kBAAC,IAAD,CAAKC,SAAS,WAAWC,QAAQ,eAC/B,kBAAC,IAAD,eAAkBC,QAAQ,eAAkBH,IAC5C,kBAAC,IAAD,CACEI,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPN,SAAS,WACTC,QAAQ,OACRM,WAAW,SACXC,eAAe,UAEf,kBAAC,IAAD,CAAYN,QAAQ,UAAUO,UAAU,MAAMC,MAAO,CAACC,MAAM,YAA5D,UAA4EC,KAAKC,MAC/Ed,EAAMe,OADR,QAiHOC,UA9FMhB,IAAU,MAAD,EACIiB,IAAMC,SAAS,GADnB,mBACrBC,EADqB,KACXC,EADW,KAEpBC,EAAoBC,cAApBD,gBAFoB,EAGHH,oBAAS,GAHN,mBAGvBK,EAHuB,KAGhBC,EAHgB,KAItBC,EAAQC,YAAYC,GAASA,EAAMF,OAClCG,EAAc5B,EAAd4B,WAEDC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sDACZC,EAAE,EADU,YACRA,EAAEF,EAAKG,QADC,uBAEZC,EAAUC,KAAKC,UAAU,CAC7BC,gBAAiBP,EAAKE,GAAL,SAAoB,IAAIF,EAAKE,GAAL,SAAoB,IAAIF,EAAKE,GAAL,KACjEM,WAAYR,EAAKE,GAAG,eACpBO,MAAOT,EAAKE,GAAL,MAAiBQ,WACxBC,aAAaX,EAAKE,GAAG,iBACrBU,cAA0C,SAA5BZ,EAAKE,GAAG,kBACtBW,OAAOb,EAAKE,GAAL,QAAqB,EAC5BY,QAAQd,EAAKE,GAAL,QAAmBQ,WAC3BK,MAAMpB,IAVU,SAYdqB,YAAY,CAACZ,YAZC,OAcpBd,EAAaY,EAAEF,EAAKG,OAAQ,KAdR,OACMD,IADN,sBAgBpBR,GAAU,GACVH,EAAgB,6BAA6B,CAC3ClB,QAAS,UACT4C,iBAAkB,MAGpBnB,EAAW,CAACoB,aAAY,IAtBJ,4CAAH,sDAqDb,OACI,oCACJ,kBAAC,IAAD,CAASC,UAAU,UAAUtC,MAAO,CAACuC,QAAQ,YAAYzC,eAAe,eACxE,6BACF,2BAAO0C,KAAK,OAAOC,SAAWC,IA/BTC,KACjB9B,GAAU,GAEQ,IAAI+B,QAAQ,CAACC,EAAQC,KAEzC,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,kBAAkBN,GAC7BI,EAAWG,OAAUR,IACnB,MAAMS,EAAcT,EAAEU,OAAOC,OACvBC,EAAKC,IAAKC,KAAKL,EAAY,CAACX,KAAK,WACnCiB,EAASH,EAAGI,WAAW,GACvBC,EAAKL,EAAGM,OAAOH,GACftC,EAAOoC,IAAKM,MAAMC,cAAcH,GACtCd,EAAQ1B,IAGR4B,EAAWgB,QAAYC,IACvBlB,EAAOkB,MAICC,KAAK9C,IACXD,EAAUC,GACV+C,QAAQC,IAAIhD,EAAK,8BAWfiD,CAFa1B,EAAEU,OAAOiB,MAAM,KAG3BC,GAAG,cAAcC,OAAO,8FAA8FvE,MAAO,CAACT,QAAS,UAEpI,2BAAOiF,QAAQ,eACf,yBAAKxE,MAAO,CAAKyE,WAAY,UACrCC,aAAa,QACbC,OAAO,OACP1E,MAAM,UACN2E,OAAO,IACPrC,QAAQ,OACRsC,MAAM,QACNC,OAAO,SACPC,UAAU,SACVC,OAAO,YAECpE,EAA4B,kBAACxB,EAAD,CAA2BgB,MAAOI,IAAvD","file":"static/js/Add - Multiple.af4c348c.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Wrapper } from \"../../../helpers/Styles\";\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport Button from '../button/button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport XLSX from 'xlsx';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AddDelivery} from '../../../helpers/NetworkRequest'\r\nimport '../../../App.css'\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" style={{color:'#ffffff'}}>{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AddMultiple = (props) =>{\r\n  const [progress, setProgress] = React.useState(0);\r\n  const { enqueueSnackbar } = useSnackbar();\r\nconst [loader,setLoader] = useState(false)\r\n  const bybId = useSelector(state => state.bybId)\r\n  const {closeModal} = props;\r\n\r\n  const FinalStep = async (data) =>{\r\nfor(let i=0;i<data.length;i++){\r\n  const article = JSON.stringify({\r\n    CustomerAddress: data[i][\"Locality\"]+\" \"+data[i][\"Landmark\"]+\" \"+data[i][\"City\"],\r\n    itemWeight: data[i][\"Item Weight\"],\r\n    phone: data[i][\"Phone\"].toString(),\r\n    CustomerName:data[i][\"Customer Name\"],\r\n    paymentStatus:data[i][\"Payment Status\"]===\"Done\"?true:false,\r\n    amount:data[i][\"Amount\"] || 0,\r\n    pincode:data[i][\"Pincode\"].toString(),\r\n    BybID:bybId\r\n  });\r\nawait AddDelivery({article})\r\n\r\nsetProgress((i/data.length)*100);\r\n}\r\nsetLoader(false);\r\nenqueueSnackbar('Delivery Added Succesfully',{\r\n  variant: 'success',\r\n  autoHideDuration: 2000,\r\n});\r\n\r\ncloseModal({makeRequest:true});\r\n  }\r\n\r\n\r\n    const readExcel = (file) =>{\r\n      setLoader(true);\r\n\r\n        const promise = new Promise((resolve,reject)=>\r\n        {\r\n    const fileReader = new FileReader()\r\n    fileReader.readAsArrayBuffer(file);\r\n    fileReader.onload = (e) =>{\r\n      const bufferArray = e.target.result;\r\n      const wb = XLSX.read(bufferArray,{type:'buffer'})\r\n    const wsname = wb.SheetNames[0];\r\n    const ws = wb.Sheets[wsname]\r\n    const data = XLSX.utils.sheet_to_json(ws);\r\n    resolve(data);\r\n    }\r\n        \r\n    fileReader.onerror = ((error)=>{\r\n    reject(error)\r\n    })\r\n    })\r\n    \r\n    promise.then(data=>{\r\n      FinalStep(data);\r\n      console.log(data,\"------------------array\")\r\n    })\r\n      }\r\n      \r\n    return(\r\n        <>\r\n    <Wrapper className=\"wrapper\" style={{padding:'30px 30px',justifyContent:'flex-start'}}>\r\n    <div>\r\n  <input type=\"file\" onChange={(e)=>{\r\n        const file = e.target.files[0];\r\n\r\n        readExcel(file)\r\n      }} id=\"excelUpload\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" style={{display: \"none\"}}/>\r\n         \r\n            <label htmlFor=\"excelUpload\">\r\n            <div style={{    background: '#FF6F1F',\r\n    borderRadius:'10rem',\r\n    border:'10px',\r\n    color:'#ffffff',\r\n    margin:'0',\r\n    padding:'1rem',\r\n    width:'300px',\r\n    height:'3.5rem',\r\n    textAlign:'center',\r\n    cursor:'pointer'\r\n}}>\r\n          {!loader?\"Upload Excel File\":(<CircularProgressWithLabel value={progress}/>)}\r\n</div>\r\n            </label>\r\n\r\n</div>\r\n    </Wrapper>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddMultiple;"],"sourceRoot":""}