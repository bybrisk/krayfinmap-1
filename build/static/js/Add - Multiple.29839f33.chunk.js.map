{"version":3,"sources":["Assets/excelDemo.jpg","components/application/deliveryTable/failedDeliveries/toolbar.js","components/application/deliveryTable/failedDeliveries/failedDeliveryTable.js","components/application/deliveryTable/AddMultiple.js"],"names":["module","exports","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","padding","display","justifyContent","alignItems","breakpoints","down","flexDirection","reactbutton","root1","btn","maxWidth","width","backgroundColor","palette","secondary","main","border","outline","height","borderRadius","color","textTransform","fontWeight","margin","cursor","transition","light","title","flex","EnhancedTableToolbar","props","rows","classes","React","useState","Toolbar","className","Typography","variant","style","onClick","wb","Sheets","XLSX","utils","json_to_sheet","SheetNames","excelBuffer","write","bookType","type","data","Blob","element","document","createElement","console","log","href","URL","createObjectURL","download","body","appendChild","click","fontSize","marginTop","useStyles","paper","marginBottom","paddingTop","table","minWidth","visuallyHidden","clip","overflow","position","top","avatar","red","DeliveryContainer","order","setOrder","orderBy","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","lastChild","useRef","emptyRows","Math","min","length","Helmet","name","content","fallback","Loader","Paper","TableContainer","Table","aria-labelledby","aria-label","onRequestSort","event","property","rowCount","headCells","id","numeric","disablePadding","label","TableBody","map","row","tabIndex","key","ref","align","TableRow","TableCell","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","CircularProgressWithLabel","Box","CircularProgress","left","bottom","right","round","AddMultiple","progress","setProgress","useSnackbar","enqueueSnackbar","loader","setLoader","cancel","status","bybId","useSelector","state","failedDeliveries","setFailedDeliveries","showFailed","setShowFailed","ApiRequestsWithoutLatitude","a","deliveryJson","item","JSON","stringify","CustomerAddress","itemWeight","phone","toString","CustomerName","paymentStatus","amount","pincode","BybID","RequestMaker","index","closeModal","AddDelivery","article","message","push","ApiRequestsWithLatitude","latitude","longitude","AddDeliveryWithGeoCode","src","ExcelDemo","alt","onChange","e","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","read","wsname","ws","sheet_to_json","onerror","error","then","Latitude","readExcel","files","accept","htmlFor","background","textAlign"],"mappings":"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","file":"static/js/Add - Multiple.29839f33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/excelDemo.9af5988d.jpg\";","import Backdrop from '@material-ui/core/Backdrop';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport React, { useRef, useState, Suspense } from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {useSelector} from 'react-redux';\r\nimport 'App.css';\r\nimport { Button } from '@material-ui/core';\r\nimport ReactButton from \"../../button/button\";\r\nimport XLSX from 'xlsx';\r\n\r\n//styles for enhanced table toolbar\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      padding:'0 30px',\r\n      display:'flex',\r\n      justifyContent:'space-between',\r\n      alignItems:'center',\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        justifyContent: \"center\",\r\n        flexDirection:'column',\r\n        alignItems: \"flex-start\",\r\n      \r\n        }\r\n  \r\n    },\r\n    reactbutton:{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n    root1:{\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      padding:'0 30px',\r\n\r\n    },\r\n    btn:{\r\n      maxWidth:220,\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.secondary.main,\r\n      border: 'none',\r\n      outline: \"none\",\r\n      height: 49,\r\n      borderRadius: 49,\r\n      color: \"#fff\",\r\n      textTransform: \"uppercase\",\r\n      fontWeight: \"600\",\r\n      margin: \"10px 0\",\r\n      cursor: \"pointer\",\r\n      transition: \"0.5s\",\r\n    '&:hover':{\r\n      backgroundColor: theme.palette.secondary.light,\r\n\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]:{\r\n      maxWidth: 180,\r\n  height:42\r\n    }\r\n    },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }));\r\n  \r\n  //thiis is to show \"Agent\" at top Helps in fixing \r\n  //them just above table\r\n  const EnhancedTableToolbar = (props) => {\r\n    const {rows} = props\r\n    const classes = useToolbarStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n  // this has to be done by ref so when window event resize listener will trigger - we will get the current element\r\n  const exportToCSV = () => {\r\n    \r\n    const ws = XLSX.utils.json_to_sheet(rows);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    const element = document.createElement(\"a\");\r\n  //  const file = new Blob(data,    \r\n  //              {type:fileType});\r\n               console.log(data)\r\n               element.href = URL.createObjectURL(data);\r\n   element.download = 'FailedDeliveries.xlsx';\r\n   document.body.appendChild(element);\r\n   element.click();\r\n   console.log(element)\r\n}\r\n\r\n    return (\r\n      <>\r\n      <Toolbar\r\n        className={classes.root}\r\n      >\r\n   \r\n      <Typography variant=\"h5\">Failed Deliveries</Typography>\r\n      <ReactButton\r\n            width={\"140px\"}\r\n            padding={'.5rem'}\r\n            style={{\r\n            }}\r\n            className={classes.reactbutton}\r\n            onClick={exportToCSV}\r\n          >\r\n            <CloudDownloadIcon style={{ fontSize: \"25px\", marginTop: \"4px\" }} />\r\n          </ReactButton>\r\n    \r\n      </Toolbar>\r\n {/* <div className={classes.root1}>\r\n      <Grid item xs={12} md={10} container justify=\"flex-start\" style={{marginBottom:20}}>\r\n        <Grid item xs={12} md={2} lg={2} container alignItems=\"center\">\r\n          <Typography variant=\"h6\">center_id :</Typography>\r\n        </Grid>\r\n        <Grid container xs={12} md={8} alignItems=\"center\">\r\n          <Typography variant=\"h5\" component=\"h5\">{supervisor_id}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n</div> */}\r\n </>\r\n    );\r\n  };\r\n\r\n  export default EnhancedTableToolbar;","import red from '@material-ui/core/colors/indigo';\r\n//dependencies for modal\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//dependecies for table\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { useEffect, useRef, Suspense} from 'react';\r\nimport Loader from '../../Loader/Loader'\r\nimport { Helmet } from \"react-helmet\";\r\n// import AgentDetail from '../AgentDetails'\r\nimport { getComparator, stableSort, StyledTableCell, StyledTableRow } from '../../tableHelpers/helpers';\r\nimport TableHead from '../tableHead';\r\nimport Toolbar from './toolbar'\r\n//divided component to make them one\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      padding:theme.spacing(3)\r\n\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n      paddingTop:20\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n    avatar: {\r\n      color: '#ffffff',\r\n      backgroundColor:red[700],\r\n    },\r\n  }));\r\n\r\n  export default function DeliveryContainer(props) {\r\n    const {rows} = props;\r\n    const classes = useStyles();\r\n  //page elements starts\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('AgentID');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const lastChild = useRef(null);\r\n    const headCells = [\r\n      { id: 'CustomerName', numeric: false, disablePadding: false, label: 'Name' },\r\n      { id: 'Locality', numeric: false, disablePadding: false, label: 'Locality' },\r\n      { id: 'Landmark', numeric: false, disablePadding: false, label: 'Landmark' },\r\n      { id: 'City', numeric: false, disablePadding: false, label: 'City' },\r\n      { id: 'Pin', numeric: false, disablePadding: false, label: 'Pin' },\r\n      { id: 'phone', numeric: true, disablePadding: false, label: 'Mobile' },\r\n      { id: 'itemWeight', numeric: true, disablePadding: false, label: 'Item Weight' },\r\n      { id: 'Amount', numeric: true, disablePadding: false, label: 'Payment' },\r\n  \r\n    ];\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n      };\r\n    \r\n      \r\n      //function for page change\r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      //function for row change\r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n    \r\n    //telling how many rows can come into this page\r\n      const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n    //page elements end\r\n  \r\n   //query is internal part of application\r\n   console.log(rows,\"llllflflflflflflflflflflfls\")\r\n\r\n   \r\n    return (\r\n      <>\r\n       <Helmet>\r\n          <title>Failed Deliveries</title>\r\n          <meta name=\"description\" content=\"List of Deliveries failed while uploading \"  />\r\n        </Helmet>\r\n   <Suspense fallback={<Loader />}>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n        <Toolbar rows={rows}/>\r\n        <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"Agents\"\r\n              aria-label=\"Agent Data\"\r\n            >\r\n              <TableHead\r\n                classes={classes}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n                headCells={headCells}\r\n              />\r\n              <TableBody>\r\n              {rows && (\r\n                \r\nrows?.map((row) => {\r\n                    return (\r\n                      <>\r\n                      <StyledTableRow\r\n                        tabIndex={-1}\r\n                        key={row[\"Customer Name\"]}\r\n                        ref={lastChild}\r\n                        style={{cursor:'pointer'}}\r\n                        >\r\n                <StyledTableCell align=\"center\"  >{row[\"Customer Name\"]}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row[\"Locality\"]}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row[\"Landmark\"]}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row[\"City\"]}</StyledTableCell>              \r\n                <StyledTableCell align=\"center\" >{row[\"Pincode\"]}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row[\"Phone\"]}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row[\"Item Weight\"]}</StyledTableCell>\r\n                <StyledTableCell align=\"center\" >{row[\"Amount\"]}</StyledTableCell>\r\n \r\n                      </StyledTableRow>\r\n      \r\n     </>\r\n    \r\n                    );\r\n                  })\r\n                )\r\n                  }\r\n                {emptyRows > 0 && (\r\n                  <TableRow >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n \r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        \r\n      </div>\r\n  </Suspense>\r\n    </>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Wrapper } from \"helpers/Styles\";\r\nimport { useSnackbar } from 'notistack';\r\nimport FailedDeliveries from './failedDeliveries/failedDeliveryTable'\r\nimport Button from '../button/button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport XLSX from 'xlsx';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AddDelivery,AddDeliveryWithGeoCode} from 'helpers/NetworkRequest'\r\nimport 'App.css'\r\nimport ExcelDemo from 'Assets/excelDemo.jpg'\r\nimport { object } from 'yup';\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" style={{color:'#ffffff'}}>{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AddMultiple = (props) =>{\r\n  const [progress, setProgress] = React.useState(0);\r\n  const { enqueueSnackbar } = useSnackbar();\r\nconst [loader,setLoader] = useState(false);\r\nlet cancel = {status:false}\r\nconst bybId = useSelector(state => state.bybId)\r\nconst [failedDeliveries,setFailedDeliveries] = useState([])\r\nconst [showFailed,setShowFailed] = useState(false)  \r\n\r\n\r\n  const ApiRequestsWithoutLatitude = async (data) =>{\r\n    console.log(\"started final step\",loader)\r\n    console.log(data,cancel.status,\"enyered ifinanfjfj\")\r\n    const deliveryJson = data.map(item=>{\r\n      return JSON.stringify({\r\n        CustomerAddress: item['Locality']+\", \"+item[\"Landmark\"]+ \", \" +item[\"City\"],\r\n        itemWeight: item[\"Item Weight\"],\r\n        phone: item[\"Phone\"].toString(),\r\n        CustomerName:item[\"Customer Name\"],\r\n        paymentStatus:item[\"Amount\"]?false:true,\r\n        amount:item[\"Amount\"] || 0,\r\n        pincode:item[\"Pincode\"].toString(),\r\n        BybID:bybId\r\n      })\r\n    })\r\n    console.log(loader)\r\n\r\n    const RequestMaker = async (index) => {\r\n      console.log(cancel.status,\"from request maker\")\r\nif(cancel.status===true || index>=deliveryJson.length){\r\n  failedDeliveries.length!==0 ? setShowFailed(true) : props.closeModal()\r\nconsole.log(showFailed)\r\n  return;\r\n}\r\nconst response =  await AddDelivery({article:deliveryJson[index],setFailedDeliveries,failedDeliveries})\r\nif(response.data.message===\"GEOCODING FAILED\"){\r\n  console.log(failedDeliveries,\"before pushing\",data[index])\r\n  failedDeliveries.push(data[index])\r\n  console.log(failedDeliveries,\"'settong faoledk clelc\")\r\n  // setFailedDeliveries(newDeliveries)\r\n}\r\nsetProgress((index/data.length)*100);\r\n\r\nRequestMaker(index+1)\r\nreturn;\r\n    }\r\n\r\n    await RequestMaker(0)\r\n\r\n}\r\n\r\nconst ApiRequestsWithLatitude = async (data) =>{\r\n  console.log(\"started final step\",loader)\r\n  console.log(data,cancel.status,\"enyered ifinanfjfj\")\r\n  const deliveryJson = data.map(item=>{\r\n    return JSON.stringify({\r\n      CustomerAddress: item['Locality']+\", \"+item[\"Landmark\"]+ \", \" +item[\"City\"],\r\n      itemWeight: item[\"Item Weight\"],\r\n      phone: item[\"Phone\"].toString(),\r\n      latitude:item['Latitude'],\r\n      longitude:item[\"Longitude\"],\r\n      CustomerName:item[\"Customer Name\"],\r\n      paymentStatus:item[\"Amount\"]?false:true,\r\n      amount:item[\"Amount\"] || 0,\r\n      pincode:item[\"Pincode\"].toString(),\r\n      BybID:bybId\r\n    })\r\n  })\r\n  console.log(loader)\r\n\r\n  const RequestMaker = async (index) => {\r\n    console.log(cancel.status,\"from request maker\")\r\nif(cancel.status===true || index>=deliveryJson.length){\r\n  failedDeliveries.length!==0 ? setShowFailed(true) : props.closeModal()\r\n\r\nreturn;\r\n}\r\nconst response =  await AddDeliveryWithGeoCode({article:deliveryJson[index],setFailedDeliveries,failedDeliveries})\r\n\r\nsetProgress((index/data.length)*100);\r\nRequestMaker(index+1)\r\nreturn;\r\n  }\r\n\r\nawait RequestMaker(0)\r\n\r\n}\r\n\r\n\r\n  \r\n//  console.log(deliveryJson)\r\n\r\n\r\n\r\n  \r\nconst handleCancel = () =>{\r\n  console.log(cancel.status,\"from handlecancel\")\r\n\r\ncancel.status = true  \r\n\r\n}\r\n\r\n\r\n    const readExcel = (file) =>{\r\n      setLoader(true);\r\n      console.log(loader,\"----------independent\")\r\nconsole.log(\"reading excel file\",loader)\r\n        const promise = new Promise((resolve,reject)=>\r\n        {\r\n    const fileReader = new FileReader()\r\n    fileReader.readAsArrayBuffer(file);\r\n    fileReader.onload = (e) =>{\r\n      const bufferArray = e.target.result;\r\n      const wb = XLSX.read(bufferArray,{type:'buffer'})\r\n    const wsname = wb.SheetNames[0];\r\n    const ws = wb.Sheets[wsname]\r\n    const data = XLSX.utils.sheet_to_json(ws);\r\n    resolve(data);\r\n    }\r\n        \r\n    fileReader.onerror = ((error)=>{\r\n    reject(error)\r\n    })\r\n    })\r\n    console.log(\"read excel file\",loader)\r\n\r\n    promise.then(data=>{\r\n      data[0].Latitude ? ApiRequestsWithLatitude(data):ApiRequestsWithoutLatitude(data)    })\r\n      }\r\n      console.log(failedDeliveries,\"from global \")\r\n    return(\r\n        <>\r\n        {showFailed?(\r\n          <>\r\n           <FailedDeliveries rows={failedDeliveries}/> \r\n          </>\r\n        ):(<Wrapper className=\"wrapper\" style={{padding:'30px 30px',justifyContent:'flex-start'}}>\r\n   <img src={ExcelDemo} style={{width:'50%'}} alt={'excel file demo'} />\r\n    <div>\r\n  <input type=\"file\" onChange={(e)=>{\r\n        const file = e.target.files[0];\r\n\r\n        readExcel(file)\r\n      }} id=\"excelUpload\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" style={{display: \"none\"}}/>\r\n         \r\n            <label htmlFor=\"excelUpload\">\r\n            <div style={{    background: '#FF6F1F',\r\n    borderRadius:'10rem',\r\n    border:'10px',\r\n    color:'#ffffff',\r\n    margin:'0',\r\n    padding:'1rem',\r\n    width:'300px',\r\n    height:'3.5rem',\r\n    textAlign:'center',\r\n    cursor:'pointer'\r\n}}>\r\n{console.log(loader,\"inside me\")}\r\n          {!loader?\"Upload Excel File\":(<CircularProgressWithLabel value={progress} />)}\r\n</div>\r\n            </label>\r\n{/* <div onClick={handleCancel}>Cancel</div> */}\r\n</div>\r\n    </Wrapper>\r\n)}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddMultiple;\r\n\r\n\r\n\r\n"],"sourceRoot":""}