{"version":3,"sources":["Assets/excelDemo.jpg","components/application/deliveryTable/AddMultiple.js"],"names":["module","exports","CircularProgressWithLabel","props","position","display","variant","top","left","bottom","right","alignItems","justifyContent","component","style","color","Math","round","value","AddMultiple","React","useState","progress","useSnackbar","enqueueSnackbar","loader","setLoader","cancel","status","bybId","useSelector","state","closeModal","isOpen","FinalStep","data","a","console","log","deliveryJson","map","item","JSON","stringify","CustomerAddress","itemWeight","phone","toString","CustomerName","paymentStatus","amount","pincode","BybID","RequestMaker","index","length","AddDelivery","article","response","className","padding","src","ExcelDemo","width","alt","type","onChange","e","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","target","result","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","onerror","error","then","readExcel","files","id","accept","htmlFor","background","borderRadius","border","margin","height","textAlign","cursor","onClick"],"mappings":"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","file":"static/js/Add - Multiple.d5c0e6e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/excelDemo.9af5988d.jpg\";","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Wrapper } from \"helpers/Styles\";\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport Button from '../button/button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport XLSX from 'xlsx';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AddDelivery} from 'helpers/NetworkRequest'\r\nimport 'App.css'\r\nimport ExcelDemo from 'Assets/excelDemo.jpg'\r\nimport { object } from 'yup';\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" style={{color:'#ffffff'}}>{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  /**\r\n   * The value of the progress indicator for the determinate variant.\r\n   * Value between 0 and 100.\r\n   */\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AddMultiple = (props) =>{\r\n  const [progress, setProgress] = React.useState(0);\r\n  const { enqueueSnackbar } = useSnackbar();\r\nconst [loader,setLoader] = useState(false);\r\nlet cancel = {status:false}\r\nconst bybId = useSelector(state => state.bybId)\r\n  const {closeModal,isOpen} = props;\r\n  const [failedDeliveries,setFailedDeliveries] = useState([])\r\n  \r\n\r\n\r\n  const FinalStep = async (data) =>{\r\n    console.log(\"started final step\",loader)\r\n    console.log(data,cancel.status,\"enyered ifinanfjfj\")\r\n    const deliveryJson = data.map(item=>{\r\n      return JSON.stringify({\r\n        CustomerAddress: item['Locality']+\", \"+item[\"Landmark\"]+ \", \" +item[\"City\"],\r\n        itemWeight: item[\"Item Weight\"],\r\n        phone: item[\"Phone\"].toString(),\r\n        CustomerName:item[\"Customer Name\"],\r\n        paymentStatus:item[\"Amount\"]?false:true,\r\n        amount:item[\"Amount\"] || 0,\r\n        pincode:item[\"Pincode\"].toString(),\r\n        BybID:bybId\r\n      })\r\n    })\r\n    console.log(loader)\r\n\r\n    const RequestMaker = async (index) => {\r\n      console.log(cancel.status,\"from request maker\")\r\nif(cancel.status===true || index>=deliveryJson.length){\r\n  return;\r\n}\r\nconst response =  await AddDelivery({article:deliveryJson[index]})\r\nconsole.log(response)\r\nRequestMaker(index+1)\r\nreturn;\r\n    }\r\n\r\nRequestMaker(0)\r\n \r\n}\r\n\r\n\r\n\r\n  \r\n//  console.log(deliveryJson)\r\n\r\n\r\n\r\n  \r\nconst handleCancel = () =>{\r\n  console.log(cancel.status,\"from handlecancel\")\r\n\r\ncancel.status = true  \r\n\r\n}\r\n\r\n\r\n    const readExcel = (file) =>{\r\n      setLoader(true);\r\n      console.log(loader,\"----------independent\")\r\nconsole.log(\"reading excel file\",loader)\r\n        const promise = new Promise((resolve,reject)=>\r\n        {\r\n    const fileReader = new FileReader()\r\n    fileReader.readAsArrayBuffer(file);\r\n    fileReader.onload = (e) =>{\r\n      const bufferArray = e.target.result;\r\n      const wb = XLSX.read(bufferArray,{type:'buffer'})\r\n    const wsname = wb.SheetNames[0];\r\n    const ws = wb.Sheets[wsname]\r\n    const data = XLSX.utils.sheet_to_json(ws);\r\n    resolve(data);\r\n    }\r\n        \r\n    fileReader.onerror = ((error)=>{\r\n    reject(error)\r\n    })\r\n    })\r\n    console.log(\"read excel file\",loader)\r\n\r\n    promise.then(data=>{\r\n      FinalStep(data);\r\n    })\r\n      }\r\n      console.log(cancel.status,\"from global \")\r\n    return(\r\n        <>\r\n    <Wrapper className=\"wrapper\" style={{padding:'30px 30px',justifyContent:'flex-start'}}>\r\n   <img src={ExcelDemo} style={{width:'50%'}} alt={'excel file demo'} />\r\n    <div>\r\n  <input type=\"file\" onChange={(e)=>{\r\n        const file = e.target.files[0];\r\n\r\n        readExcel(file)\r\n      }} id=\"excelUpload\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" style={{display: \"none\"}}/>\r\n         \r\n            <label htmlFor=\"excelUpload\">\r\n            <div style={{    background: '#FF6F1F',\r\n    borderRadius:'10rem',\r\n    border:'10px',\r\n    color:'#ffffff',\r\n    margin:'0',\r\n    padding:'1rem',\r\n    width:'300px',\r\n    height:'3.5rem',\r\n    textAlign:'center',\r\n    cursor:'pointer'\r\n}}>\r\n{console.log(loader,\"inside me\")}\r\n          {!loader?\"Upload Excel File\":(<CircularProgressWithLabel value={progress} />)}\r\n</div>\r\n            </label>\r\n<div onClick={handleCancel}>Cancel</div>\r\n</div>\r\n    </Wrapper>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddMultiple;\r\n\r\n\r\n\r\n"],"sourceRoot":""}